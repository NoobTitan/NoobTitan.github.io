<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo + Typora 图片路径同步</title>
    <link href="/2022/03/15/HexoTyporaImgSync/"/>
    <url>/2022/03/15/HexoTyporaImgSync/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Typora-图片路径同步"><a href="#Hexo-Typora-图片路径同步" class="headerlink" title="Hexo + Typora 图片路径同步"></a>Hexo + Typora 图片路径同步</h1><h2 id="1-修改-config-yml"><a href="#1-修改-config-yml" class="headerlink" title="1. 修改_config.yml"></a>1. 修改_config.yml</h2><figure class="highlight yaml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h2 id="2-修改Typora配置"><a href="#2-修改Typora配置" class="headerlink" title="2. 修改Typora配置"></a>2. 修改Typora配置</h2><img src="/2022/03/15/HexoTyporaImgSync/image-20220315105435487.png" class="" title="image-20220315105435487"><p>如图配置Typora图片路径</p><h2 id="3-安装插件"><a href="#3-安装插件" class="headerlink" title="3. 安装插件"></a>3. 安装插件</h2><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">npm install hexo-asset-<span class="hljs-built_in">image</span> --<span class="hljs-built_in">save</span><br></code></pre></td></tr></table></figure><p>安装该插件是为了自动转换图片路径为博客支持格式</p><p>打开<code>/node_modules/hexo-asset-image/index.js</code>, 使用以下代码替换</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs arcade">const <span class="hljs-built_in">log</span> = require(<span class="hljs-string">&#x27;hexo-log&#x27;</span>)(&#123; <span class="hljs-string">&#x27;debug&#x27;</span>: <span class="hljs-literal">false</span>, <span class="hljs-string">&#x27;slient&#x27;</span>: <span class="hljs-literal">false</span> &#125;);<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * md文件返回 true</span><br><span class="hljs-comment"> * @param &#123;*&#125; data </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">ignore</span>(<span class="hljs-params">data</span>) &#123;<br>    <span class="hljs-keyword">var</span> source = data.source;<br>    <span class="hljs-keyword">var</span> ext = source.substring(source.lastIndexOf(<span class="hljs-string">&#x27;.&#x27;</span>)).toLowerCase();<br>    <span class="hljs-keyword">return</span> [<span class="hljs-string">&#x27;md&#x27;</span>,].<span class="hljs-built_in">indexOf</span>(ext) &gt; <span class="hljs-number">-1</span>;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">action</span>(<span class="hljs-params">data</span>) &#123;<br>    <span class="hljs-keyword">var</span> reverseSource = data.source.<span class="hljs-built_in">split</span>(<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-built_in">reverse</span>().join(<span class="hljs-string">&quot;&quot;</span>);<br>    <span class="hljs-keyword">var</span> fileName = reverseSource.substring(<span class="hljs-number">3</span>, reverseSource.<span class="hljs-built_in">indexOf</span>(<span class="hljs-string">&quot;/&quot;</span>)).<span class="hljs-built_in">split</span>(<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-built_in">reverse</span>().join(<span class="hljs-string">&quot;&quot;</span>);<br><br>    <span class="hljs-comment">// ![example](postname/example.jpg)  --&gt;  &#123;% asset_img example.jpg example %&#125;</span><br>    <span class="hljs-keyword">var</span> regExp = RegExp(<span class="hljs-string">&quot;!\\[(.*?)\\]\\(&quot;</span> + fileName + <span class="hljs-string">&#x27;/(.+?)\\)&#x27;</span>, <span class="hljs-string">&quot;g&quot;</span>);<br>    <span class="hljs-comment">// hexo g</span><br>    data.content = data.content.<span class="hljs-built_in">replace</span>(regExp, <span class="hljs-string">&quot;&#123;% asset_img $2 $1 %&#125;&quot;</span>,<span class="hljs-string">&quot;g&quot;</span>);<br><br>    <span class="hljs-comment">// log.info(`hexo-asset-img: filename: $&#123;fileName&#125;, title: $&#123;data.title.trim()&#125;`);</span><br>    <br>    <span class="hljs-keyword">return</span> data;<br>&#125;<br><br>hexo.extend.<span class="hljs-built_in">filter</span>.register(<span class="hljs-string">&#x27;before_post_render&#x27;</span>,(data)=&gt;&#123;<br>    <span class="hljs-keyword">if</span>(!ignore(data))&#123;<br>        action(data)<br>    &#125;<br>&#125;, <span class="hljs-number">0</span>);<br></code></pre></td></tr></table></figure><h2 id="4-插入图片"><a href="#4-插入图片" class="headerlink" title="4. 插入图片"></a>4. 插入图片</h2><p>复制任意图片，在Typora中粘贴，Typora自动生成相对路径图片，hexo部署之后也可以正常显示图片</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://moeci.com/posts/hexo-typora/">Hexo + Typora + 开发Hexo插件 解决图片路径不一致</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu系统备份与还原</title>
    <link href="/2022/02/23/UbuntuBackup/"/>
    <url>/2022/02/23/UbuntuBackup/</url>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu系统备份与还原"><a href="#Ubuntu系统备份与还原" class="headerlink" title="Ubuntu系统备份与还原"></a>Ubuntu系统备份与还原</h1><h2 id="1-备份"><a href="#1-备份" class="headerlink" title="1.备份"></a>1.备份</h2><ul><li>当前使用的系统</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs routeros">sudo su<br>cd /<br>tar czvpf sys_backup_$(date <span class="hljs-string">&quot;+%Y%m%d-%H%M%S&quot;</span>).tar.gz <span class="hljs-attribute">--exclude</span>=/proc <span class="hljs-attribute">--exclude</span>=/lost+found   <span class="hljs-attribute">--exclude</span>=/mnt <span class="hljs-attribute">--exclude</span>=/sys  <span class="hljs-attribute">--exclude</span>=/media <span class="hljs-attribute">--exclude</span>=/home/vetec/.cache <span class="hljs-attribute">--exclude</span>=/sys_backup_$(date <span class="hljs-string">&quot;+%Y%m%d-%H%M%S&quot;</span>).tar.gz /<br><span class="hljs-comment"># 这一步可能会提示’tar: Error exit delayed from previous errors’，忽略即可</span><br></code></pre></td></tr></table></figure><ul><li>当前路径的系统</li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">sudo su<br>tar czvpf <span class="hljs-regexp">/sys_backup_$(date &quot;+%Y%m%d-%H%M%S&quot;).tar.gz --exclude=./</span>proc --<span class="hljs-keyword">exclude</span>=.<span class="hljs-regexp">/lost+found   --exclude=./m</span>nt --<span class="hljs-keyword">exclude</span>=.<span class="hljs-regexp">/sys --exclude=./</span>home<span class="hljs-regexp">/fengji/</span>.ros --<span class="hljs-keyword">exclude</span>=.<span class="hljs-regexp">/home/</span>fengji<span class="hljs-regexp">/.config/</span>Code --<span class="hljs-keyword">exclude</span>=.<span class="hljs-regexp">/media --exclude=./</span>home<span class="hljs-regexp">/fengji/</span>.cache --<span class="hljs-keyword">exclude</span>=.<span class="hljs-regexp">/sys_backup_$(date &quot;+%Y%m%d-%H%M%S&quot;).tar.gz ./</span><br></code></pre></td></tr></table></figure><p>以上为系统打包，排除了大部分旧系统中冗余数据。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#打包完成后使用此命令查看精确大小</span><br><span class="hljs-built_in">du</span> -h backup.tar.gz<br></code></pre></td></tr></table></figure><h2 id="2-重装系统"><a href="#2-重装系统" class="headerlink" title="2.重装系统"></a>2.重装系统</h2><p>使用U盘启动盘安装ubuntu16或者ubuntu20系统，安装系统可以分出512MB的efi分区，和&#x2F;根分区。安装完成后进入U盘系统进行系统恢复。</p><h2 id="3-系统恢复"><a href="#3-系统恢复" class="headerlink" title="3.系统恢复"></a>3.系统恢复</h2><p>进入临时系统，把新系统中的grub.cfg和fstab取出保存，再把name.tar.gz复制进入系统盘&#x2F;目录下</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo su<br>sudo cp <span class="hljs-regexp">/media/</span>(Ubuntu)<span class="hljs-regexp">/boot/g</span>rub<span class="hljs-regexp">/grub.cfg ./</span><br>sudo cp <span class="hljs-regexp">/media/</span>(Ubuntu)<span class="hljs-regexp">/etc/</span>fstab ./<br>cp <span class="hljs-regexp">/media/</span>(U盘)<span class="hljs-regexp">/backup.tgz ./</span><br>sudo tar xvpfz backup.tgz -C ./<br>sudo mkdir proc lost+found mnt sys media cdrom<br></code></pre></td></tr></table></figure><p>用新系统中的UUID替换老系统中的grub.cfg和fstab的UUID，其中fstab根据分区情况更改<br>vim替换:<code>%s/老UUID/新UUID/gc</code><br>如果硬件相同，那么已经可以进入新系统了。</p><h2 id="4-实操汇总"><a href="#4-实操汇总" class="headerlink" title="4.实操汇总"></a>4.实操汇总</h2><ol><li>首先备份旧系统ubuntu16为sys_backup_20211214-102530.tar.gz，使用该系统覆盖新电脑新系统，只能使用内核4.15进入系统，此时nouveau禁用，N卡驱动需要重装，有线网卡和无线网卡为最新硬件，没有有效驱动，无法ubuntu16中运行。尝试更换5.10的内核，成功安装内核后重启无法进入系统（无错误黑屏），安装5.11内核出现问题，旧系统依赖版本过低，无法成功安装，而ubuntu16无法升级所需依赖。</li><li>更换新旧电脑的无线网卡，新电脑可以在ubuntu16，内核4.15的条件下，使用旧电脑无线网卡上网，但其有线网卡仍然无法识别，随后再次重装成功升级内核为5.4+，但仍然无法安装有线网卡驱动，该次重装优化了旧系统备份，卸载了N卡驱动，修复了apt问题，同样禁用nouveau，打包为sys_backup_20211215-141023.tar.gz</li><li>最后换回新旧电脑的无线网卡，安装ubuntu20.04.3, 内核版本为5.11，发现有线网卡能正常使用，无线网卡在解决驱动问题后也能正常使用。但在新系统ubuntu20下，原先代码环境不兼容，需要调整。</li><li>修复210无线网卡<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># fix 210 wifi</span><br>sudo mv iwlwifi-ty-a0-gf-a0.pnvm  iwlwifi-ty-a0-gf-a0.pnvm.bak<br>mv <span class="hljs-regexp">/lib/</span>firmware<span class="hljs-regexp">/iwlwifi-ty-a0-gf-a0.pnvm /</span>lib<span class="hljs-regexp">/firmware/i</span>wlwifi-ty-a0-gf-a0.pnvm.bak<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Ubuntu系统相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HowToCook</title>
    <link href="/2022/02/22/HowToCook/"/>
    <url>/2022/02/22/HowToCook/</url>
    
    <content type="html"><![CDATA[<h1 id="关于HowToCook"><a href="#关于HowToCook" class="headerlink" title="关于HowToCook"></a>关于HowToCook</h1><p><a href="https://github.com/Anduin2017/HowToCook">程序员做饭指南</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
